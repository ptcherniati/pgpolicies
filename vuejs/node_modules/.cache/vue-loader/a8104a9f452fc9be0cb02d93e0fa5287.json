{
  "remainingRequest": "/home/philippe/git/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippe/git/ui/src/components/RightNode.vue?vue&type=style&index=0&id=63cfc184&scoped=true&lang=scss&",
  "dependencies": [
    {
      "path": "/home/philippe/git/ui/src/components/RightNode.vue",
      "mtime": 1556452618809
    },
    {
      "path": "/home/philippe/git/ui/node_modules/css-loader/index.js",
      "mtime": 1556400173766
    },
    {
      "path": "/home/philippe/git/ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js",
      "mtime": 1556400176186
    },
    {
      "path": "/home/philippe/git/ui/node_modules/postcss-loader/src/index.js",
      "mtime": 1556400175662
    },
    {
      "path": "/home/philippe/git/ui/node_modules/sass-loader/lib/loader.js",
      "mtime": 1556400175870
    },
    {
      "path": "/home/philippe/git/ui/node_modules/vuetify-loader/lib/loader.js",
      "mtime": 1549812933000
    },
    {
      "path": "/home/philippe/git/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1556400173470
    },
    {
      "path": "/home/philippe/git/ui/node_modules/vue-loader/lib/index.js",
      "mtime": 1556400176186
    }
  ],
  "contextDependencies": [],
  "result": [
    "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.references > table > tr > td {\n  border: solid 1px red;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n",
    {
      "version": 3,
      "sources": [
        "RightNode.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "RightNode.vue",
      "sourceRoot": "src/components",
      "sourcesContent": [
        "<template>\n  <div\n    class=\"rightsNode\"\n    :style=\"getStyle()\"\n  >\n    <ul\n      v-for=\"(node, key) in pstd_\"\n      class=\"tree-list\"\n      :key=\"key\"\n    >\n      <span\n        @click=\"visible=!visible\"\n        class=\"label\"\n      >{{ key }}</span>\n      <RightNode\n        v-if=\"visible\"\n        name=\"root\"\n        :deep=\"1\"\n        :pstd.sync=\"node\"\n        :dvu.sync=\"dvu\"\n      />\n    </ul>\n    <!--table>\n      <tr v-for=\"(value,key) in pstd\" :key=\"key\">\n        <td>{{key}}</td>\n        <RightNode :name=\"key\" :deep=\"deep+1\" :pstd=\"value\" :dvu=\"dvu\"/>\n      </tr>\n    </table-->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RightsNode\",\n  computed: {\n    pstd_() {\n      let columns = this.configuration.pstdReference.columns;\n      if (Object.keys(columns).length == 0) {\n        return {};\n      }\n      let column = Object.values(columns)[this.deep].name;\n      let pstd = {};\n      this.pstd.forEach(element => {\n        let value = element.refValues[column];\n        if (pstd[value] == null) {\n          pstd[value] = [element];\n        } else {\n          pstd[value].push(element);\n        }\n      });\n      return pstd;\n    }\n  },\n  props: {\n    deep: Number,\n    dvu: Array,\n    pstd: Array,\n    configuration: Object\n  },\n  data() {\n    return {\n      visible: false\n    };\n  },\n  methods: {\n    getStyle() {\n      let marge = this.deep * 5;\n      return \"margin: \" + marge + \"px 10px;\";\n    }\n  },\n  components: {\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.references > table > tr > td {\n  border: solid 1px red;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"
      ]
    }
  ]
}