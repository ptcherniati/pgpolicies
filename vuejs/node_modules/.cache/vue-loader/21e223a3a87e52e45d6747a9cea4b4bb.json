{
  "remainingRequest": "/home/ptcherniati/depots/v2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ptcherniati/depots/v2/ui/src/components/RightNode.vue?vue&type=script&lang=js&",
  "dependencies": [
    {
      "path": "/home/ptcherniati/depots/v2/ui/src/components/RightNode.vue",
      "mtime": 1584958281609
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 499162500000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/babel-loader/lib/index.js",
      "mtime": 1584958279989
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/vuetify-loader/lib/loader.js",
      "mtime": 1574476662000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 499162500000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/vue-loader/lib/index.js",
      "mtime": 499162500000
    }
  ],
  "contextDependencies": [],
  "result": [
    {
      "type": "Buffer",
      "data": "base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUmlnaHRzTm9kZSIsCiAgY29tcHV0ZWQ6IHsKICAgIHBzdGRfKCkgewogICAgICBsZXQgY29sdW1ucyA9IHRoaXMuY29uZmlndXJhdGlvbi5wc3RkUmVmZXJlbmNlLmNvbHVtbnM7CiAgICAgIGlmIChPYmplY3Qua2V5cyhjb2x1bW5zKS5sZW5ndGggPT0gMCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgICBsZXQgY29sdW1uID0gT2JqZWN0LnZhbHVlcyhjb2x1bW5zKVt0aGlzLmRlZXBdLm5hbWU7CiAgICAgIGxldCBwc3RkID0ge307CiAgICAgIHRoaXMucHN0ZC5mb3JFYWNoKGVsZW1lbnQgPT4gewogICAgICAgIGxldCB2YWx1ZSA9IGVsZW1lbnQucmVmVmFsdWVzW2NvbHVtbl07CiAgICAgICAgaWYgKHBzdGRbdmFsdWVdID09IG51bGwpIHsKICAgICAgICAgIHBzdGRbdmFsdWVdID0gW2VsZW1lbnRdOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwc3RkW3ZhbHVlXS5wdXNoKGVsZW1lbnQpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBwc3RkOwogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIGRlZXA6IE51bWJlciwKICAgIGR2dTogQXJyYXksCiAgICBwc3RkOiBBcnJheSwKICAgIGNvbmZpZ3VyYXRpb246IE9iamVjdAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpc2libGU6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0U3R5bGUoKSB7CiAgICAgIGxldCBtYXJnZSA9IHRoaXMuZGVlcCAqIDU7CiAgICAgIHJldHVybiAibWFyZ2luOiAiICsgbWFyZ2UgKyAicHggMTBweDsiOwogICAgfQogIH0sCiAgY29tcG9uZW50czogewogIH0KfTsK"
    },
    {
      "version": 3,
      "sources": [
        "RightNode.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "RightNode.vue",
      "sourceRoot": "src/components",
      "sourcesContent": [
        "<template>\n  <div\n    class=\"rightsNode\"\n    :style=\"getStyle()\"\n  >\n    <ul\n      v-for=\"(node, key) in pstd_\"\n      class=\"tree-list\"\n      :key=\"key\"\n    >\n      <span\n        @click=\"visible=!visible\"\n        class=\"label\"\n      >{{ key }}</span>\n      <RightNode\n        v-if=\"visible\"\n        name=\"root\"\n        :deep=\"1\"\n        :pstd.sync=\"node\"\n        :dvu.sync=\"dvu\"\n      />\n    </ul>\n    <!--table>\n      <tr v-for=\"(value,key) in pstd\" :key=\"key\">\n        <td>{{key}}</td>\n        <RightNode :name=\"key\" :deep=\"deep+1\" :pstd=\"value\" :dvu=\"dvu\"/>\n      </tr>\n    </table-->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RightsNode\",\n  computed: {\n    pstd_() {\n      let columns = this.configuration.pstdReference.columns;\n      if (Object.keys(columns).length == 0) {\n        return {};\n      }\n      let column = Object.values(columns)[this.deep].name;\n      let pstd = {};\n      this.pstd.forEach(element => {\n        let value = element.refValues[column];\n        if (pstd[value] == null) {\n          pstd[value] = [element];\n        } else {\n          pstd[value].push(element);\n        }\n      });\n      return pstd;\n    }\n  },\n  props: {\n    deep: Number,\n    dvu: Array,\n    pstd: Array,\n    configuration: Object\n  },\n  data() {\n    return {\n      visible: false\n    };\n  },\n  methods: {\n    getStyle() {\n      let marge = this.deep * 5;\n      return \"margin: \" + marge + \"px 10px;\";\n    }\n  },\n  components: {\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.references > table > tr > td {\n  border: solid 1px red;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"
      ]
    }
  ]
}