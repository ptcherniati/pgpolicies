{
  "remainingRequest": "/home/ptcherniati/depots/v2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ptcherniati/depots/v2/ui/src/components/Synthesis.vue?vue&type=script&lang=js&",
  "dependencies": [
    {
      "path": "/home/ptcherniati/depots/v2/ui/src/components/Synthesis.vue",
      "mtime": 1584958281609
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 499162500000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/babel-loader/lib/index.js",
      "mtime": 1584958279989
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/vuetify-loader/lib/loader.js",
      "mtime": 1574476662000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 499162500000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/vue-loader/lib/index.js",
      "mtime": 499162500000
    }
  ],
  "contextDependencies": [],
  "result": [
    {
      "type": "Buffer",
      "data": "base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHN0b3JhZ2UsIFN0b3JhZ2UgfSBmcm9tICJAL3N0b3JhZ2UiOwppbXBvcnQgc3RvcmUgZnJvbSAiQC9zdG9yZSI7CmltcG9ydCBWdWV4IGZyb20gInZ1ZXgiOwppbXBvcnQgeyBHQ2hhcnQgfSBmcm9tICJ2dWUtZ29vZ2xlLWNoYXJ0cyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU3ludGhlc2lzIiwKICBjb21wdXRlZDogewogICAgZGF0YXNldHM6IHsKICAgICAgZ2V0KCkgewogICAgICAgIHJldHVybiBzdG9yZS5zdGF0ZS5jb25maWd1cmF0aW9uICE9IG51bGwKICAgICAgICAgID8gc3RvcmUuc3RhdGUuY29uZmlndXJhdGlvbi5kYXRhc2V0CiAgICAgICAgICA6IG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBkYXRhVHlwZTogewogICAgICBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHN0b3JlLnN0YXRlLmRhdGFUeXBlOwogICAgICB9CiAgICB9LAogICAgZGF0YXNldERlc2NyaXB0aW9uOiB7CiAgICAgIGdldCgpIHsKICAgICAgICByZXR1cm4gc3RvcmUuc3RhdGUuZGF0YXNldERlc2NyaXB0aW9uOwogICAgICB9CiAgICB9LAogICAgdmFyaWFibGVzOiB7CiAgICAgIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy5sb2NhbFN0b3JlLnN0YXRlLmRhdGFzZXROYW1lICE9IG51bGwKICAgICAgICAgID8gT2JqZWN0LmtleXModGhpcy5kYXRhc2V0c1t0aGlzLmxvY2FsU3RvcmUuc3RhdGUuZGF0YXNldE5hbWVdLmRhdGEpCiAgICAgICAgICA6IG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBkYXRhc2V0TmFtZTogewogICAgICBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHN0b3JlLnN0YXRlLmRhdGFzZXROYW1lOwogICAgICB9CiAgICB9LAogICAgZGF0YXNldFZhbHVlOiB7CiAgICAgIGdldCgpIHsKICAgICAgICByZXR1cm4gc3RvcmUuc3RhdGUuZGF0YXNldFZhbHVlOwogICAgICB9CiAgICB9LAogICAgaGVhZGVyczogewogICAgICBnZXQoKSB7CiAgICAgICAgaWYgKHN0b3JlLnN0YXRlLmRhdGFzZXREZXNjcmlwdGlvbiA9PSBudWxsKSB7CiAgICAgICAgICByZXR1cm4gW107CiAgICAgICAgfQogICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhzdG9yZS5zdGF0ZS5kYXRhc2V0RGVzY3JpcHRpb24ucmVmZXJlbmNlcykKICAgICAgICAgIC5jb25jYXQoT2JqZWN0LmtleXMoc3RvcmUuc3RhdGUuZGF0YXNldERlc2NyaXB0aW9uLmRhdGEpKQogICAgICAgICAgLm1hcChhID0+IHsKICAgICAgICAgICAgcmV0dXJuIHsgdGV4dDogYSwgYWxpZ246ICJjZW50ZXIiLCB2YWx1ZTogYSB9OwogICAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIHByb3BzOiB7fSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gQXJyYXkgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHByb2Nlc3NlZCB3aXRoIHZpc3VhbGl6YXRpb24uYXJyYXlUb0RhdGFUYWJsZSBmdW5jdGlvbgogICAgICBjaGFydERhdGE6IFsKICAgICAgICBbJ1llYXInLCAnU2FsZXMnLCAnRXhwZW5zZXMnLCAnUHJvZml0J10sCiAgICAgICAgWycyMDE0JywgMTAwMCwgNDAwLCAyMDBdLAogICAgICAgIFsnMjAxNScsIDExNzAsIDQ2MCwgMjUwXSwKICAgICAgICBbJzIwMTYnLCA2NjAsIDExMjAsIDMwMF0sCiAgICAgICAgWycyMDE3JywgMTAzMCwgNTQwLCAzNTBdCiAgICAgIF0sCiAgICAgIGNoYXJ0T3B0aW9uczogewogICAgICAgIGNoYXJ0OiB7CiAgICAgICAgICB0aXRsZTogJ0NvbXBhbnkgUGVyZm9ybWFuY2UnLAogICAgICAgICAgc3VidGl0bGU6ICdTYWxlcywgRXhwZW5zZXMsIGFuZCBQcm9maXQ6IDIwMTQtMjAxNycsCiAgICAgICAgfQogICAgICB9LAogICAgICBsb2NhbFN0b3JlOiBuZXcgVnVleC5TdG9yZSh7CiAgICAgICAgc3RhdGU6IHsKICAgICAgICAgIGRhdGFzZXROYW1lOiBudWxsLAogICAgICAgICAgdmFyaWFibGVOYW1lOiBudWxsLAogICAgICAgICAgZGF0YTogbnVsbCwKICAgICAgICAgIGRhdGFEZXNjcmlwdGlvbjogbnVsbAogICAgICAgIH0sCiAgICAgICAgbXV0YXRpb25zOiB7CiAgICAgICAgICBzZXREYXRhc2V0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgICAgICAgIHRoaXMuc3RhdGUuZGF0YXNldE5hbWUgPSBwYXlsb2FkLmRhdGFzZXROYW1lOwogICAgICAgICAgICB0aGlzLnN0YXRlLmRhdGFEZXNjcmlwdGlvbiA9CiAgICAgICAgICAgICAgc3RvcmUuc3RhdGUuY29uZmlndXJhdGlvbi5kYXRhc2V0W3BheWxvYWQuZGF0YXNldE5hbWVdOwogICAgICAgICAgfSwKICAgICAgICAgIHNldFZhcmlhYmxlKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgICAgICAgIHRoaXMuc3RhdGUudmFyaWFibGVOYW1lID0gcGF5bG9hZC52YXJpYWJsZU5hbWU7CiAgICAgICAgICAgIHRoaXMuc3RhdGUuZGF0YSA9IHN0b3JlLnN0YXRlLmRhdGE7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBhY3Rpb25zOiB7fQogICAgICB9KQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNldERhdGFzZXQoZGF0YXNldE5hbWUpIHsKICAgICAgdGhpcy5sb2NhbFN0b3JlLmNvbW1pdCgic2V0RGF0YXNldCIsIHsKICAgICAgICBkYXRhc2V0TmFtZTogZGF0YXNldE5hbWUKICAgICAgfSk7CiAgICB9LAogICAgc2V0VmFyaWFibGUodmFyaWFibGVOYW1lKSB7CiAgICAgIHRoaXMubG9jYWxTdG9yZS5jb21taXQoInNldFZhcmlhYmxlIiwgewogICAgICAgIHZhcmlhYmxlTmFtZTogdmFyaWFibGVOYW1lCiAgICAgIH0pOwogICAgfSwKICAgIGxvYWREYXRhc2V0KHsgY29tbWl0IH0sIGRhdGFzZXQpIHsKICAgICAgaHR0cAogICAgICAgIC5sb2FkRGF0YXNldChkYXRhc2V0LmRhdGFzZXROYW1lLCBjb25maWcuQVBQTElDQVRJT05fTkFNRSkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICByZXNwb25zZS5qc29uKCkudGhlbihmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgIGNvbW1pdCgic2V0RGF0YXNldCIsIHsKICAgICAgICAgICAgICBkYXRhc2V0VmFsdWU6IGRhdGEsCiAgICAgICAgICAgICAgZGF0YXNldE5hbWU6IGRhdGFzZXQuZGF0YXNldE5hbWUsCiAgICAgICAgICAgICAgZGF0YXNldERlc2NyaXB0aW9uOiBkYXRhc2V0LmRhdGFzZXREZXNjcmlwdGlvbgogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSk7CiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBHQ2hhcnQKICB9Cn07Cg=="
    },
    {
      "version": 3,
      "sources": [
        "Synthesis.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAg
      "file": "Synthesis.vue",
      "sourceRoot": "src/components",
      "sourcesContent": [
        "<template>\n  <v-container\n    v-if=\"dataType!=null\"\n    class=\"dataset\"\n    fluid\n    grid-list-xl\n  >\n    <v-layout\n      v-if=\"dataType!=null\"\n      wrap\n      align-center\n    >\n      <v-flex\n        xs12\n        sm6\n        d-flex\n      >\n        <v-select\n          @input=\"setDataset\"\n          name=\"datasets\"\n          :items=\"dataType\"\n          label=\"Choisissez un type de donnÃ©es\"\n        />\n        <v-btn\n          flat\n          class=\"body-2\"\n        >\n          {{ localStore.state.datasetName }}\n        </v-btn>\n      </v-flex>\n    </v-layout>\n    <v-layout\n      v-if=\"localStore.state.datasetName!=null && datasets[localStore.state.datasetName]!=null\"\n      wrap\n      align-center\n    >\n      <v-flex\n        xs12\n        sm6\n        d-flex\n      >\n        <v-select\n          @input=\"setVariable\"\n          name=\"variables\"\n          :items=\"variables\"\n          label=\"Choisissez une variable\"\n        />\n        <v-btn\n          flat\n          class=\"body-2\"\n        >\n          {{ localStore.state.variableName }}\n        </v-btn>\n      </v-flex>\n    </v-layout>\n    <GChart\n      type=\"LineChart\"\n      :data=\"chartData\"\n      :options=\"chartOptions\"\n    />\n  </v-container>\n</template>\n\n<script>\nimport { storage, Storage } from \"@/storage\";\nimport store from \"@/store\";\nimport Vuex from \"vuex\";\nimport { GChart } from \"vue-google-charts\";\nexport default {\n  name: \"Synthesis\",\n  computed: {\n    datasets: {\n      get() {\n        return store.state.configuration != null\n          ? store.state.configuration.dataset\n          : null;\n      }\n    },\n    dataType: {\n      get() {\n        return store.state.dataType;\n      }\n    },\n    datasetDescription: {\n      get() {\n        return store.state.datasetDescription;\n      }\n    },\n    variables: {\n      get() {\n        return this.localStore.state.datasetName != null\n          ? Object.keys(this.datasets[this.localStore.state.datasetName].data)\n          : null;\n      }\n    },\n    datasetName: {\n      get() {\n        return store.state.datasetName;\n      }\n    },\n    datasetValue: {\n      get() {\n        return store.state.datasetValue;\n      }\n    },\n    headers: {\n      get() {\n        if (store.state.datasetDescription == null) {\n          return [];\n        }\n        return Object.keys(store.state.datasetDescription.references)\n          .concat(Object.keys(store.state.datasetDescription.data))\n          .map(a => {\n            return { text: a, align: \"center\", value: a };\n          });\n      }\n    }\n  },\n  props: {},\n  data() {\n    return {\n      // Array will be automatically processed with visualization.arrayToDataTable function\n      chartData: [\n        ['Year', 'Sales', 'Expenses', 'Profit'],\n        ['2014', 1000, 400, 200],\n        ['2015', 1170, 460, 250],\n        ['2016', 660, 1120, 300],\n        ['2017', 1030, 540, 350]\n      ],\n      chartOptions: {\n        chart: {\n          title: 'Company Performance',\n          subtitle: 'Sales, Expenses, and Profit: 2014-2017',\n        }\n      },\n      localStore: new Vuex.Store({\n        state: {\n          datasetName: null,\n          variableName: null,\n          data: null,\n          dataDescription: null\n        },\n        mutations: {\n          setDataset(state, payload) {\n            this.state.datasetName = payload.datasetName;\n            this.state.dataDescription =\n              store.state.configuration.dataset[payload.datasetName];\n          },\n          setVariable(state, payload) {\n            this.state.variableName = payload.variableName;\n            this.state.data = store.state.data;\n          }\n        },\n        actions: {}\n      })\n    };\n  },\n  methods: {\n    setDataset(datasetName) {\n      this.localStore.commit(\"setDataset\", {\n        datasetName: datasetName\n      });\n    },\n    setVariable(variableName) {\n      this.localStore.commit(\"setVariable\", {\n        variableName: variableName\n      });\n    },\n    loadDataset({ commit }, dataset) {\n      http\n        .loadDataset(dataset.datasetName, config.APPLICATION_NAME)\n        .then(response => {\n          response.json().then(function(data) {\n            commit(\"setDataset\", {\n              datasetValue: data,\n              datasetName: dataset.datasetName,\n              datasetDescription: dataset.datasetDescription\n            });\n          });\n        })\n        .catch(error => console.log(error));\n    }\n  },\n  components: {\n    GChart\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.references > table > tr > td {\n  border: solid 1px red;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"
      ]
    }
  ]
}