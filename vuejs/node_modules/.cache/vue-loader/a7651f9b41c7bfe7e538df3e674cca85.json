{
  "remainingRequest": "/home/ptcherniati/depots/v2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ptcherniati/depots/v2/ui/src/components/Configuration.vue?vue&type=script&lang=js&",
  "dependencies": [
    {
      "path": "/home/ptcherniati/depots/v2/ui/src/components/Configuration.vue",
      "mtime": 1584958281609
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 499162500000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/babel-loader/lib/index.js",
      "mtime": 1584958279989
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/vuetify-loader/lib/loader.js",
      "mtime": 1574476662000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 499162500000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/vue-loader/lib/index.js",
      "mtime": 499162500000
    }
  ],
  "contextDependencies": [],
  "result": [
    {
      "type": "Buffer",
      "data": "base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSZWZlcmVuY2VzIGZyb20gIkAvY29tcG9uZW50cy9yZWZlcmVuY2VzL1JlZmVyZW5jZXMiOwppbXBvcnQgRGF0YXNldHMgZnJvbSAiQC9jb21wb25lbnRzL0RhdGFzZXRzIjsKaW1wb3J0IFJpZ2h0cyBmcm9tICJAL2NvbXBvbmVudHMvUmlnaHRzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDb25maWd1cmF0aW9uIiwKICBjb21wdXRlZDoge30sCiAgcHJvcHM6IHsKICAgIC8vY29uZmlndXJhdGlvbjogQ29uZmlndXJhdGlvbiwKICB9LAogIGRhdGEoKXsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGVkUGFuZWw6ICJyaWdodHMiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYWN0aXZlRGF0YXNldCgpewogICAgICB0aGlzLnNlbGVjdGVkUGFuZWw9ImRhdGFzZXRzIgogICAgfSwKICAgIGFjdGl2ZVJlZmVyZW5jZXMoKXsKICAgICAgdGhpcy5zZWxlY3RlZFBhbmVsPSJyZWZlcmVuY2VzIgogICAgfSwKICAgIGFjdGl2ZVJpZ2h0cygpewogICAgICB0aGlzLnNlbGVjdGVkUGFuZWw9InJpZ2h0cyIKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFJlZmVyZW5jZXMsCiAgICBEYXRhc2V0cywKICAgIFJpZ2h0cywKICB9Cn07Cg=="
    },
    {
      "version": 3,
      "sources": [
        "Configuration.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "Configuration.vue",
      "sourceRoot": "src/components",
      "sourcesContent": [
        "<template>\n  <div class=\"configuration\">\n    <button @click=\"activeDataset()\">\n      Datasets\n    </button>\n    <button @click=\"activeReferences()\">\n      References\n    </button>\n    <button @click=\"activeRights()\">\n      Rights\n    </button>\n    <References\n      v-if=\"selectedPanel=='references'\"\n      :references=\"configuration.references\"\n    />\n    <Datasets\n      v-if=\"selectedPanel=='datasets'\"\n      :datasets=\"configuration.datasets\"\n    />\n    <Rights\n      v-if=\"selectedPanel=='rights'\"\n      :rights=\"configuration\"\n    />\n  </div>\n</template>\n\n<script>\nimport References from \"@/components/references/References\";\nimport Datasets from \"@/components/Datasets\";\nimport Rights from \"@/components/Rights\";\nexport default {\n  name: \"Configuration\",\n  computed: {},\n  props: {\n    //configuration: Configuration,\n  },\n  data(){\n    return {\n      selectedPanel: \"rights\"\n    };\n  },\n  methods: {\n    activeDataset(){\n      this.selectedPanel=\"datasets\"\n    },\n    activeReferences(){\n      this.selectedPanel=\"references\"\n    },\n    activeRights(){\n      this.selectedPanel=\"rights\"\n    }\n  },\n  components: {\n    References,\n    Datasets,\n    Rights,\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"
      ]
    }
  ]
}