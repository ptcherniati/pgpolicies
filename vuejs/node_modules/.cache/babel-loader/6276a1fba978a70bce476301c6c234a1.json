{
  "remainingRequest": "/home/ptcherniati/depots/v2/ui/node_modules/babel-loader/lib/index.js!/home/ptcherniati/depots/v2/ui/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/ptcherniati/depots/v2/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ptcherniati/depots/v2/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ptcherniati/depots/v2/ui/src/components/RightNode.vue?vue&type=script&lang=js&",
  "dependencies": [
    {
      "path": "/home/ptcherniati/depots/v2/ui/src/components/RightNode.vue",
      "mtime": 1584958281609
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 499162500000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/babel-loader/lib/index.js",
      "mtime": 1584958279989
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/vuetify-loader/lib/loader.js",
      "mtime": 1574476662000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 499162500000
    },
    {
      "path": "/home/ptcherniati/depots/v2/ui/node_modules/vue-loader/lib/index.js",
      "mtime": 499162500000
    }
  ],
  "contextDependencies": [],
  "result": [
    {
      "type": "Buffer",
      "data": "base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QudmFsdWVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJSaWdodHNOb2RlIiwKICBjb21wdXRlZDogewogICAgcHN0ZF86IGZ1bmN0aW9uIHBzdGRfKCkgewogICAgICB2YXIgY29sdW1ucyA9IHRoaXMuY29uZmlndXJhdGlvbi5wc3RkUmVmZXJlbmNlLmNvbHVtbnM7CgogICAgICBpZiAoT2JqZWN0LmtleXMoY29sdW1ucykubGVuZ3RoID09IDApIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KCiAgICAgIHZhciBjb2x1bW4gPSBPYmplY3QudmFsdWVzKGNvbHVtbnMpW3RoaXMuZGVlcF0ubmFtZTsKICAgICAgdmFyIHBzdGQgPSB7fTsKICAgICAgdGhpcy5wc3RkLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICB2YXIgdmFsdWUgPSBlbGVtZW50LnJlZlZhbHVlc1tjb2x1bW5dOwoKICAgICAgICBpZiAocHN0ZFt2YWx1ZV0gPT0gbnVsbCkgewogICAgICAgICAgcHN0ZFt2YWx1ZV0gPSBbZWxlbWVudF07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBzdGRbdmFsdWVdLnB1c2goZWxlbWVudCk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuIHBzdGQ7CiAgICB9CiAgfSwKICBwcm9wczogewogICAgZGVlcDogTnVtYmVyLAogICAgZHZ1OiBBcnJheSwKICAgIHBzdGQ6IEFycmF5LAogICAgY29uZmlndXJhdGlvbjogT2JqZWN0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdmlzaWJsZTogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRTdHlsZTogZnVuY3Rpb24gZ2V0U3R5bGUoKSB7CiAgICAgIHZhciBtYXJnZSA9IHRoaXMuZGVlcCAqIDU7CiAgICAgIHJldHVybiAibWFyZ2luOiAiICsgbWFyZ2UgKyAicHggMTBweDsiOwogICAgfQogIH0sCiAgY29tcG9uZW50czoge30KfTs="
    },
    {
      "version": 3,
      "sources": [
        "RightNode.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,UAAA,OAAA,GAAA,KAAA,aAAA,CAAA,aAAA,CAAA,OAAA;;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA,MAAA,IAAA,CAAA,EAAA;AACA,eAAA,EAAA;AACA;;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,IAAA,EAAA,IAAA;AACA,UAAA,IAAA,GAAA,EAAA;AACA,WAAA,IAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,KAAA,GAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA;;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,IAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AACA,SAFA,MAEA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,OAAA;AACA;AACA,OAPA;AAQA,aAAA,IAAA;AACA;AAjBA,GAFA;AAqBA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,MADA;AAEA,IAAA,GAAA,EAAA,KAFA;AAGA,IAAA,IAAA,EAAA,KAHA;AAIA,IAAA,aAAA,EAAA;AAJA,GArBA;AA2BA,EAAA,IA3BA,kBA2BA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GA/BA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,KAAA,GAAA,KAAA,IAAA,GAAA,CAAA;AACA,aAAA,aAAA,KAAA,GAAA,UAAA;AACA;AAJA,GAhCA;AAsCA,EAAA,UAAA,EAAA;AAtCA,CAAA",
      "sourcesContent": [
        "<template>\n  <div\n    class=\"rightsNode\"\n    :style=\"getStyle()\"\n  >\n    <ul\n      v-for=\"(node, key) in pstd_\"\n      class=\"tree-list\"\n      :key=\"key\"\n    >\n      <span\n        @click=\"visible=!visible\"\n        class=\"label\"\n      >{{ key }}</span>\n      <RightNode\n        v-if=\"visible\"\n        name=\"root\"\n        :deep=\"1\"\n        :pstd.sync=\"node\"\n        :dvu.sync=\"dvu\"\n      />\n    </ul>\n    <!--table>\n      <tr v-for=\"(value,key) in pstd\" :key=\"key\">\n        <td>{{key}}</td>\n        <RightNode :name=\"key\" :deep=\"deep+1\" :pstd=\"value\" :dvu=\"dvu\"/>\n      </tr>\n    </table-->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RightsNode\",\n  computed: {\n    pstd_() {\n      let columns = this.configuration.pstdReference.columns;\n      if (Object.keys(columns).length == 0) {\n        return {};\n      }\n      let column = Object.values(columns)[this.deep].name;\n      let pstd = {};\n      this.pstd.forEach(element => {\n        let value = element.refValues[column];\n        if (pstd[value] == null) {\n          pstd[value] = [element];\n        } else {\n          pstd[value].push(element);\n        }\n      });\n      return pstd;\n    }\n  },\n  props: {\n    deep: Number,\n    dvu: Array,\n    pstd: Array,\n    configuration: Object\n  },\n  data() {\n    return {\n      visible: false\n    };\n  },\n  methods: {\n    getStyle() {\n      let marge = this.deep * 5;\n      return \"margin: \" + marge + \"px 10px;\";\n    }\n  },\n  components: {\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.references > table > tr > td {\n  border: solid 1px red;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"
      ],
      "sourceRoot": "src/components"
    }
  ]
}