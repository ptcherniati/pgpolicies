{
  "remainingRequest": "/home/philippe/git/ui/node_modules/babel-loader/lib/index.js!/home/philippe/git/ui/node_modules/vuetify-loader/lib/loader.js!/home/philippe/git/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/philippe/git/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippe/git/ui/src/components/application/UploadApplication.vue?vue&type=script&lang=js&",
  "dependencies": [
    {
      "path": "/home/philippe/git/ui/src/components/application/UploadApplication.vue",
      "mtime": 1556452618809
    },
    {
      "path": "/home/philippe/git/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1556400173470
    },
    {
      "path": "/home/philippe/git/ui/node_modules/babel-loader/lib/index.js",
      "mtime": 1556400173250
    },
    {
      "path": "/home/philippe/git/ui/node_modules/vuetify-loader/lib/loader.js",
      "mtime": 1549812933000
    },
    {
      "path": "/home/philippe/git/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1556400173470
    },
    {
      "path": "/home/philippe/git/ui/node_modules/vue-loader/lib/index.js",
      "mtime": 1556400176186
    }
  ],
  "contextDependencies": [],
  "result": [
    "import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.match\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import { storage, Storage } from \"@/storage\";\nimport store from \"@/store\";\nimport EventBus from \"@/eventBus\";\nexport default {\n  name: \"UploadApplication\",\n  mounted: function mounted() {\n    var _this = this;\n\n    EventBus.$on(\"application:loaded\", function (event) {\n      if (event.id) {\n        _this.snackbar.text = \"la configuration a été chargée\";\n        _this.snackbar.visible = true;\n        store.dispatch(\"loadApplicationConfiguration\", event.id);\n      } else {\n        var message = \"la configuration n'a pas pu être chargée.\";\n\n        if (event.status == 302) {\n          message += \" La configuration \";\n        } else if (event.status == 401) {\n          message += \" Vous n'êtes pas autorisés à charger une application\";\n        } else if (event.status == 403) {\n          message += \" Vous n'avez pas les droits pour charger une application\";\n        } else if (event.status == 404) {\n          message = \"Le service est indisponible pour le moment.\";\n        }\n\n        _this.snackbar.text = message;\n        _this.snackbar.visible = true;\n      }\n    });\n  },\n  computed: {\n    application: {\n      get: function get() {\n        return store.state.application;\n      }\n    }\n  },\n  props: {},\n  data: function data() {\n    return {\n      snackbar: {\n        visible: false,\n        text: \"\"\n      },\n      valid: false\n      /**/\n      ,\n      fileName: null,\n      fileToUploadName: null,\n      file: null,\n      applicationName: null\n      /* */\n      ,\n      nameRules: [\n      /* */\n      function (v) {\n        return !!v || \"Le nom de l'application est requis\";\n      }, function (v) {\n        return v && v.length >= 4 && v.length <= 20 || \"le nom doit être compris en 4 et 20 caractères.\";\n      }, function (v) {\n        return v && v.match(\"^[a-zA-Z][a-zA-Z0-9_]*$\") != null || \"le nom commence par une letrre et ne comporte que des lettres et des chiffre ou _.\";\n      }],\n      fileRules: [\n      /* */\n      function (v) {\n        return !!v || \"Le fichier est requis\";\n      }]\n    };\n  },\n  methods: {\n    handleFileUpload: function handleFileUpload() {\n      /** */\n      this.file = this.$refs.file.files[0];\n      this.fileToUploadName = this.file.name;\n    },\n    validate: function validate() {\n      /** */\n      if (this.$refs.form.validate() && this.file != null) {\n        store.dispatch(\"loadApplication\", {\n          applicationName: this.applicationName,\n          file: this.file\n        });\n        this.resetValidation();\n        this.valid = false;\n      }\n    },\n    resetValidation: function resetValidation() {\n      /** */\n      this.file = null;\n      this.fileToUploadName = null;\n      this.$refs.form.resetValidation();\n    },\n    pickFile: function pickFile() {\n      this.$refs.file.click();\n    }\n  },\n  components: {}\n};",
    {
      "version": 3,
      "sources": [
        "UploadApplication.vue"
      ],
      "names": [],
      "mappings": "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",
      "sourcesContent": [
        "<template>\n  <v-expansion-panel\n    inset\n    id=\"uploadApplicationPanel\"\n  >\n    <v-expansion-panel-content>\n      <template v-slot:header>\n        <v-btn>Enregistrer une nouvelle application</v-btn>\n      </template>\n      <v-card>\n        <v-form\n          title=\"Enregistrer une nouvelle application\"\n          ref=\"form\"\n          v-model=\"valid\"\n          lazy-validation\n        >\n          <v-card>\n            <v-card-title\n              primary-title\n              class=\"pink lighten-5\"\n            >\n              <div>\n                <v-layout tag=\"h3\">\n                  Enregistrer une nouvelle configuration d'application\n                </v-layout>\n                <v-text-field\n                  v-model=\"applicationName\"\n                  :rules=\"nameRules\"\n                  label=\"Nom de l'application\"\n                  required\n                />\n                <v-text-field\n                  label=\"Choisissez-un fichier\"\n                  v-model=\"fileToUploadName\"\n                  :rules=\"fileRules\"\n                  append-icon=\"mdi-upload\"\n                  @click=\"pickFile\"\n                  required\n                >\n                  <v-icon>mdi-upload</v-icon>\n                </v-text-field>\n                <input\n                  style=\"display:none\"\n                  type=\"file\"\n                  id=\"applicationfileUpload\"\n                  ref=\"file\"\n                  @change=\"handleFileUpload()\"\n                >\n                <v-btn\n                  :disabled=\"!valid\"\n                  color=\"success\"\n                  @click=\"validate\"\n                >\n                  Enregistrer une nouvelle application\n                </v-btn>\n              </div>\n            </v-card-title>\n          </v-card>\n        </v-form>\n      </v-card>\n      <v-snackbar\n        top\n        vertical\n        v-model=\"snackbar.visible\"\n      >\n        {{ snackbar.text }}\n        <v-btn\n          flat\n          @click=\"snackbar.visible = false\"\n          class=\"red--text\"\n        >\n          fermer\n          <v-icon color=\"red\">\n            mdi-close\n          </v-icon>\n        </v-btn>\n      </v-snackbar>\n    </v-expansion-panel-content>\n  </v-expansion-panel>\n</template>\n\n<script>\n//import { storage, Storage } from \"@/storage\";\nimport store from \"@/store\";\nimport EventBus from \"@/eventBus\";\nexport default {\n  name: \"UploadApplication\",\n  mounted() {\n    EventBus.$on(\"application:loaded\", event => {\n      if (event.id) {\n        this.snackbar.text = \"la configuration a été chargée\";\n        this.snackbar.visible = true;\n        store.dispatch(\"loadApplicationConfiguration\", event.id);\n      } else {\n        let message = \"la configuration n'a pas pu être chargée.\";\n        if (event.status == 302) {\n          message += \" La configuration \";\n        } else if (event.status == 401) {\n          message += \" Vous n'êtes pas autorisés à charger une application\";\n        } else if (event.status == 403) {\n          message += \" Vous n'avez pas les droits pour charger une application\";\n        } else if (event.status == 404) {\n          message = \"Le service est indisponible pour le moment.\";\n        }\n        this.snackbar.text = message;\n        this.snackbar.visible = true;\n      }\n    });\n  },\n  computed: {\n    application: {\n      get() {\n        return store.state.application;\n      }\n    }\n  },\n  props: {},\n  data() {\n    return {\n      snackbar: {\n        visible: false,\n        text: \"\"\n      },\n      valid: false /**/,\n      fileName: null,\n      fileToUploadName: null,\n      file: null,\n      applicationName: null /* */,\n      nameRules: [\n        /* */\n        v => !!v || \"Le nom de l'application est requis\",\n        v =>\n          (v && v.length >= 4 && v.length <= 20) ||\n          \"le nom doit être compris en 4 et 20 caractères.\",\n        v =>\n          (v && v.match(\"^[a-zA-Z][a-zA-Z0-9_]*$\") != null) ||\n          \"le nom commence par une letrre et ne comporte que des lettres et des chiffre ou _.\"\n      ],\n      fileRules: [\n        /* */\n        v => !!v || \"Le fichier est requis\"\n      ]\n    };\n  },\n  methods: {\n    handleFileUpload() {\n      /** */\n      this.file = this.$refs.file.files[0];\n      this.fileToUploadName = this.file.name;\n    },\n    validate() {\n      /** */\n      if (this.$refs.form.validate() && this.file != null) {\n        store.dispatch(\"loadApplication\", {\n          applicationName: this.applicationName,\n          file: this.file\n        });\n        this.resetValidation();\n        this.valid = false;\n      }\n    },\n    resetValidation() {\n      /** */\n      this.file = null;\n      this.fileToUploadName = null;\n      this.$refs.form.resetValidation();\n    },\n    pickFile() {\n      this.$refs.file.click();\n    }\n  },\n  components: {}\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"
      ],
      "sourceRoot": "src/components/application"
    }
  ]
}