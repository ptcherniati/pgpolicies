{
  "remainingRequest": "/home/philippe/git/ui/node_modules/babel-loader/lib/index.js!/home/philippe/git/ui/node_modules/eslint-loader/index.js??ref--13-0!/home/philippe/git/ui/src/store.js",
  "dependencies": [
    {
      "path": "/home/philippe/git/ui/src/store.js",
      "mtime": 1556400176322
    },
    {
      "path": "/home/philippe/git/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1556400173470
    },
    {
      "path": "/home/philippe/git/ui/node_modules/babel-loader/lib/index.js",
      "mtime": 1556400173250
    },
    {
      "path": "/home/philippe/git/ui/node_modules/eslint-loader/index.js",
      "mtime": 1556400174142
    }
  ],
  "contextDependencies": [],
  "result": [
    "import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport defaultData from '@/data';\nimport http from \"@/http/http.js\";\nimport EventBus from '@/eventBus';\nimport { storage, Storage } from \"@/storage\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    data: defaultData,\n    user: {\n      init: true,\n      login: \"poussin\",\n      password: \"xxxxxxxx\"\n    },\n    applications: [],\n    application: null,\n    applicationName: null,\n    configuration: null,\n    referenceType: null,\n    dataType: null,\n    referenceName: null,\n    referenceValue: null,\n    referenceDescription: null,\n    datasetName: null,\n    datasetValue: null,\n    datasetDescription: null\n  },\n  mutations: {\n    removeUser: function removeUser(state) {\n      this.state.user = null;\n    },\n    setUser: function setUser(state, payload) {\n      if (payload.ok) {\n        this.state.user = payload;\n        EventBus.$emit('user:connected', payload);\n        this.dispatch('loadApplications');\n      } else {\n        EventBus.$emit('user:disconnected', payload);\n      }\n    },\n    logOut: function logOut(state, payload) {\n      if (payload.ok) {\n        EventBus.$emit('user:disconnected', payload);\n      } else {\n        EventBus.$emit('user:disconnected:error', payload);\n      }\n\n      this.state.user = {\n        init: true\n      };\n      this.state.data = defaultData;\n      this.state.applications = [];\n      this.state.application = null;\n      this.state.applicationName = null;\n      this.state.configuration = null;\n      this.state.referenceType = null;\n      this.state.dataType = null;\n      this.state.referenceName = null;\n      this.state.referenceValue = null;\n      this.state.referenceDescription = null;\n      this.state.datasetName = null;\n      this.state.datasetValue = null;\n      this.state.datasetDescription = null;\n    },\n    setApplications: function setApplications(state, payload) {\n      this.state.applications = payload;\n    },\n    applicationLoaded: function applicationLoaded(state, payload) {\n      EventBus.$emit('application:loaded', payload);\n    },\n    setApplication: function setApplication(state, payload) {\n      this.state.application = payload;\n      this.state.applicationName = payload == null ? null : payload.name;\n      this.state.configuration = payload.configuration;\n      this.state.dataType = payload.dataType;\n      this.state.referenceType = payload.referenceType;\n    },\n    setReference: function setReference(state, payload) {\n      if (payload.status) {\n        EventBus.$emit('reference:loaded:error', payload);\n      } else {\n        EventBus.$emit('reference:loaded', payload);\n        this.state.referenceName = payload.referenceName;\n        this.state.referenceDescription = payload.referenceDescription;\n        this.state.referenceValue = payload.referenceValue;\n      }\n    },\n    referenceUploaded: function referenceUploaded(state, payload) {\n      EventBus.$emit('reference:uploaded', payload);\n    },\n    datasetUploaded: function datasetUploaded(state, payload) {\n      EventBus.$emit('dataset:uploaded', payload);\n    },\n    setReferenceDescription: function setReferenceDescription(state, payload) {\n      this.state.referenceDescription = payload;\n    },\n    setDataset: function setDataset(state, payload) {\n      if (payload.status) {\n        EventBus.$emit('dataset:loaded:error', payload);\n      } else {\n        EventBus.$emit('dataset:loaded', payload);\n        this.state.datasetName = payload.datasetName;\n        this.state.datasetDescription = payload.datasetDescription;\n        this.state.datasetValue =\n        /*payload.datasetValue.length == 0 ? this.state.data : */\n        payload.datasetValue;\n      }\n    },\n    setDatasetDescription: function setDatasetDescription(state, payload) {\n      this.state.datasetDescription = payload;\n    }\n  },\n  actions: {\n    loadUser: function loadUser(_ref, user) {\n      var commit = _ref.commit;\n      http.login(user).then(function (response) {\n        commit('setUser', response);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    logOut: function logOut(_ref2) {\n      var commit = _ref2.commit;\n      http.logOut().then(function (response) {\n        commit('logOut', response);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    loadDataset: function loadDataset(_ref3, dataset) {\n      var commit = _ref3.commit;\n      http.loadDataset(dataset.datasetName, this.state.applicationName).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            commit('setDataset', {\n              datasetValue: data,\n              datasetName: dataset.datasetName,\n              datasetDescription: dataset.datasetDescription\n            });\n          });\n        } else {\n          commit('setDataset', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    loadReference: function loadReference(_ref4, reference) {\n      var commit = _ref4.commit;\n      http.loadReference(reference.referenceName, this.state.applicationName).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            commit('setReference', {\n              referenceValue: data,\n              referenceName: reference.referenceName,\n              referenceDescription: reference.referenceDescription\n            });\n          });\n        } else {\n          commit('setReference', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    downloadReference: function downloadReference(_ref5, parameters) {\n      var commit = _ref5.commit;\n      http.loadReference(parameters.referenceName, this.state.applicationName).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            commit('referenceDownload', data);\n          });\n        } else {\n          commit('referenceDownload', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    uploadReference: function uploadReference(_ref6, parameters) {\n      var commit = _ref6.commit;\n      http.uploadReference(parameters.referenceName, this.state.applicationName, parameters.file).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            commit('referenceUploaded', data);\n          });\n        } else {\n          commit('referenceUploaded', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    uploadDataset: function uploadDataset(_ref7, parameters) {\n      var commit = _ref7.commit;\n      http.uploadDataset(parameters.datasetName, this.state.applicationName, parameters.file).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            commit('datasetUploaded', data);\n          });\n        } else {\n          commit('datasetUploaded', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    loadApplications: function loadApplications(_ref8) {\n      var commit = _ref8.commit;\n      http.loadApplications().then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            commit('setApplications', data);\n          });\n        } else {\n          commit('setApplications', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    loadApplicationConfiguration: function loadApplicationConfiguration(_ref9, applicationName) {\n      var commit = _ref9.commit;\n      http.loadApplicationConfiguration(applicationName).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            commit('setApplication', data);\n          });\n        } else {\n          commit('setApplication', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    loadApplication: function loadApplication(_ref10, parameters) {\n      var commit = _ref10.commit;\n      http.loadApplication(parameters.applicationName, parameters.file).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            commit('applicationLoaded', data);\n          });\n        } else {\n          commit('applicationLoaded', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    loadDatasetFilter: function loadDatasetFilter(_ref11, dataset) {\n      var commit = _ref11.commit;\n      http.loadDataset(dataset.datasetName, this.state.applicationName).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            response.json().then(function (data) {\n              commit('setDataset', {\n                datasetValue: data,\n                datasetName: dataset.datasetName,\n                datasetDescription: dataset.datasetDescription\n              });\n            });\n          });\n        } else {\n          commit('setDataset', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    uploadFile: function uploadFile(_ref12, id) {\n      var commit = _ref12.commit;\n      http.uploadFile(id).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            commit('fileUpload', data);\n          });\n        } else {\n          commit('fileUpload', response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  },\n  getters: {\n    isLogged: function isLogged(state) {\n      return state.user != null;\n    }\n  }\n});",
    {
      "version": 3,
      "sources": [
        "/home/philippe/git/ui/src/store.js"
      ],
      "names": [
        "Vue",
        "Vuex",
        "defaultData",
        "http",
        "EventBus",
        "storage",
        "Storage",
        "use",
        "Store",
        "state",
        "data",
        "user",
        "init",
        "login",
        "password",
        "applications",
        "application",
        "applicationName",
        "configuration",
        "referenceType",
        "dataType",
        "referenceName",
        "referenceValue",
        "referenceDescription",
        "datasetName",
        "datasetValue",
        "datasetDescription",
        "mutations",
        "removeUser",
        "setUser",
        "payload",
        "ok",
        "$emit",
        "dispatch",
        "logOut",
        "setApplications",
        "applicationLoaded",
        "setApplication",
        "name",
        "setReference",
        "status",
        "referenceUploaded",
        "datasetUploaded",
        "setReferenceDescription",
        "setDataset",
        "setDatasetDescription",
        "actions",
        "loadUser",
        "commit",
        "then",
        "response",
        "catch",
        "error",
        "console",
        "log",
        "loadDataset",
        "dataset",
        "json",
        "loadReference",
        "reference",
        "downloadReference",
        "parameters",
        "uploadReference",
        "file",
        "uploadDataset",
        "loadApplications",
        "loadApplicationConfiguration",
        "loadApplication",
        "loadDatasetFilter",
        "uploadFile",
        "id",
        "getters",
        "isLogged"
      ],
      "mappings": "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",
      "sourcesContent": [
        "import Vue from 'vue'\nimport Vuex from 'vuex'\nimport defaultData from '@/data'\nimport http from \"@/http/http.js\";\nimport EventBus from '@/eventBus';\nimport {\n    storage,\n    Storage\n} from \"@/storage\";\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    state: {\n        data: defaultData,\n        user: {\n            init: true,\n            login: \"poussin\",\n            password: \"xxxxxxxx\"\n        },\n        applications: [],\n        application: null,\n        applicationName: null,\n        configuration: null,\n        referenceType: null,\n        dataType: null,\n        referenceName: null,\n        referenceValue: null,\n        referenceDescription: null,\n        datasetName: null,\n        datasetValue: null,\n        datasetDescription: null,\n    },\n    mutations: {\n        removeUser(state) {\n            this.state.user = null;\n        },\n        setUser(state, payload) {\n            if (payload.ok) {\n                this.state.user = payload;\n                EventBus.$emit('user:connected', payload)\n                this.dispatch('loadApplications')\n            } else {\n                EventBus.$emit('user:disconnected', payload)\n            }\n        },\n        logOut(state, payload) {\n            if (payload.ok) {\n                EventBus.$emit('user:disconnected', payload)\n            } else {\n                EventBus.$emit('user:disconnected:error', payload)\n            }\n            this.state.user = {\n                init: true,\n            };\n            this.state.data = defaultData;\n            this.state.applications = [];\n            this.state.application = null;\n            this.state.applicationName = null;\n            this.state.configuration = null;\n            this.state.referenceType = null;\n            this.state.dataType = null;\n            this.state.referenceName = null;\n            this.state.referenceValue = null;\n            this.state.referenceDescription = null;\n            this.state.datasetName = null;\n            this.state.datasetValue = null;\n            this.state.datasetDescription = null;\n        },\n        setApplications(state, payload) {\n            this.state.applications = payload;\n        },\n        applicationLoaded(state, payload) {\n            EventBus.$emit('application:loaded', payload)\n        },\n        setApplication(state, payload) {\n            this.state.application = payload;\n            this.state.applicationName = payload == null ? null : payload.name;\n            this.state.configuration = payload.configuration;\n            this.state.dataType = payload.dataType;\n            this.state.referenceType = payload.referenceType;\n        },\n        setReference(state, payload) {\n            if (payload.status) {\n                EventBus.$emit('reference:loaded:error', payload);\n            } else {\n                EventBus.$emit('reference:loaded', payload);\n                this.state.referenceName = payload.referenceName;\n                this.state.referenceDescription = payload.referenceDescription;\n                this.state.referenceValue = payload.referenceValue;\n            }\n        },\n        referenceUploaded(state, payload) {\n            EventBus.$emit('reference:uploaded', payload);\n        },\n        datasetUploaded(state, payload) {\n            EventBus.$emit('dataset:uploaded', payload);\n        },\n        setReferenceDescription(state, payload) {\n            this.state.referenceDescription = payload;\n        },\n        setDataset(state, payload) {\n            if (payload.status) {\n                EventBus.$emit('dataset:loaded:error', payload);\n            } else {\n                EventBus.$emit('dataset:loaded', payload);\n                this.state.datasetName = payload.datasetName;\n                this.state.datasetDescription = payload.datasetDescription;\n                this.state.datasetValue = /*payload.datasetValue.length == 0 ? this.state.data : */ payload.datasetValue;\n            }\n        },\n        setDatasetDescription(state, payload) {\n            this.state.datasetDescription = payload;\n        },\n    },\n    actions: {\n        loadUser({\n            commit\n        }, user) {\n            http\n                .login(user)\n                .then(response => {\n                    commit('setUser', response)\n                })\n                .catch(error => console.log(error));\n        },\n        logOut({\n            commit\n        }) {\n            http\n                .logOut()\n                .then(response => {\n                    commit('logOut', response);\n                })\n                .catch(error => console.log(error));\n        },\n        loadDataset({\n            commit\n        }, dataset) {\n            http\n                .loadDataset(dataset.datasetName, this.state.applicationName)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            commit('setDataset', {\n                                datasetValue: data,\n                                datasetName: dataset.datasetName,\n                                datasetDescription: dataset.datasetDescription\n                            });\n                        })\n                    } else {\n                        commit('setDataset', response)\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n        loadReference({\n            commit\n        }, reference) {\n            http\n                .loadReference(reference.referenceName, this.state.applicationName)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            commit('setReference', {\n                                referenceValue: data,\n                                referenceName: reference.referenceName,\n                                referenceDescription: reference.referenceDescription\n                            });\n                        })\n                    } else {\n                        commit('setReference', response);\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n        downloadReference({\n            commit\n        }, parameters) {\n            http\n                .loadReference(parameters.referenceName, this.state.applicationName)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            commit('referenceDownload', data);\n                        })\n                    } else {\n                        commit('referenceDownload', response);\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n        uploadReference({\n            commit\n        }, parameters) {\n            http\n                .uploadReference(parameters.referenceName, this.state.applicationName, parameters.file)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            commit('referenceUploaded', data);\n                        })\n                    } else {\n                        commit('referenceUploaded', response)\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n        uploadDataset({\n            commit\n        }, parameters) {\n            http\n                .uploadDataset(parameters.datasetName, this.state.applicationName, parameters.file)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            commit('datasetUploaded', data);\n                        })\n                    } else {\n                        commit('datasetUploaded', response)\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n\n        loadApplications({\n            commit\n        }) {\n            http\n                .loadApplications()\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            commit('setApplications', data);\n                        })\n                    } else {\n                        commit('setApplications', response)\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n\n        loadApplicationConfiguration({\n            commit\n        }, applicationName) {\n            http\n                .loadApplicationConfiguration(applicationName)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            commit('setApplication', data);\n                        })\n                    } else {\n                        commit('setApplication', response)\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n        loadApplication({\n            commit\n        }, parameters) {\n            http\n                .loadApplication(parameters.applicationName, parameters.file)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            commit('applicationLoaded', data);\n                        })\n                    } else {\n                        commit('applicationLoaded', response);\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n        loadDatasetFilter({\n            commit\n        }, dataset) {\n            http\n                .loadDataset(dataset.datasetName, this.state.applicationName)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            response.json().then(function(data) {\n                                commit('setDataset', {\n                                    datasetValue: data,\n                                    datasetName: dataset.datasetName,\n                                    datasetDescription: dataset.datasetDescription\n                                });\n                            })\n                        })\n                    } else {\n                        commit('setDataset', response);\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n        uploadFile({\n            commit\n        }, id) {\n            http\n                .uploadFile(id)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(function(data) {\n                            commit('fileUpload', data);\n                        })\n                    } else {\n                        commit('fileUpload', response);\n                    }\n                })\n                .catch(error => console.log(error));\n        },\n    },\n    getters: {\n        isLogged(state) {\n            return state.user != null;\n        }\n    }\n})"
      ]
    }
  ]
}