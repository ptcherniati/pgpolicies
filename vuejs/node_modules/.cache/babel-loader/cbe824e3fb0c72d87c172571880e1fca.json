{
  "remainingRequest": "/home/philippe/git/ui/node_modules/babel-loader/lib/index.js!/home/philippe/git/ui/node_modules/eslint-loader/index.js??ref--13-0!/home/philippe/git/ui/src/http/http.js",
  "dependencies": [
    {
      "path": "/home/philippe/git/ui/src/http/http.js",
      "mtime": 1556400176322
    },
    {
      "path": "/home/philippe/git/ui/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1556400173470
    },
    {
      "path": "/home/philippe/git/ui/node_modules/babel-loader/lib/index.js",
      "mtime": 1556400173250
    },
    {
      "path": "/home/philippe/git/ui/node_modules/eslint-loader/index.js",
      "mtime": 1556400174142
    }
  ],
  "contextDependencies": [],
  "result": [
    "import _classCallCheck from \"/home/philippe/git/ui/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philippe/git/ui/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from \"axios\";\nimport config from \"@/config\";\nimport { storage, Storage } from \"@/storage\";\n\nvar HttpClient =\n/*#__PURE__*/\nfunction () {\n  function HttpClient() {\n    _classCallCheck(this, HttpClient);\n  }\n\n  _createClass(HttpClient, [{\n    key: \"helloWorld\",\n    value: function helloWorld() {\n      return axios.get(\"\".concat(config.API_URL));\n    }\n  }, {\n    key: \"login\",\n    value: function login(user) {\n      var formData = new FormData();\n      formData.append(\"login\", user.login);\n      formData.append(\"password\", user.password);\n      return fetch(\"\".concat(config.API_URL, \"login\"), {\n        method: \"POST\",\n        body: formData\n      });\n    }\n  }, {\n    key: \"logOut\",\n    value: function logOut() {\n      return fetch(\"\".concat(config.API_URL, \"logout\"), {\n        method: \"DELETE\"\n      });\n    }\n  }, {\n    key: \"loadDataset\",\n    value: function loadDataset(dataset, applicationName) {\n      return fetch(\"\".concat(config.API_URL, \"applications/\").concat(applicationName, \"/data/\").concat(dataset), {\n        credentials: \"same-origin\"\n      });\n    }\n  }, {\n    key: \"loadReference\",\n    value: function loadReference(reference, applicationName) {\n      return fetch(\"\".concat(config.API_URL, \"applications/\").concat(applicationName, \"/references/\").concat(reference), {\n        credentials: \"same-origin\"\n      });\n    }\n  }, {\n    key: \"uploadReference\",\n    value: function uploadReference(reference, applicationName, file) {\n      var formData = new FormData();\n      formData.append(\"file\", file);\n      return fetch(\"\".concat(config.API_URL, \"applications/\").concat(applicationName, \"/references/\").concat(reference), {\n        method: \"POST\",\n        body: formData,\n        credentials: \"same-origin\"\n      });\n    }\n  }, {\n    key: \"uploadDataset\",\n    value: function uploadDataset(dataset, applicationName, file) {\n      var formData = new FormData();\n      formData.append(\"file\", file);\n      return fetch(\"\".concat(config.API_URL, \"applications/\").concat(applicationName, \"/data/\").concat(dataset), {\n        method: \"POST\",\n        body: formData,\n        credentials: \"same-origin\"\n      });\n    }\n  }, {\n    key: \"loadApplications\",\n    value: function loadApplications() {\n      return fetch(\"\".concat(config.API_URL, \"applications/\"), {\n        credentials: \"same-origin\"\n      });\n    }\n  }, {\n    key: \"loadApplicationConfiguration\",\n    value: function loadApplicationConfiguration(applicationName) {\n      return fetch(\"\".concat(config.API_URL, \"applications/\").concat(applicationName), {\n        credentials: \"same-origin\"\n      });\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function uploadFile(id) {\n      return fetch(\"\".concat(config.API_URL, \"files/\").concat(id), {\n        credentials: \"same-origin\"\n      });\n    }\n  }, {\n    key: \"loadApplication\",\n    value: function loadApplication(applicationName, file) {\n      var formData = new FormData();\n      formData.append(\"file\", file);\n      return fetch(\"\".concat(config.API_URL, \"applications/\").concat(applicationName), {\n        method: \"POST\",\n        body: formData,\n        credentials: \"same-origin\"\n      });\n    }\n  }, {\n    key: \"buildConfig\",\n    value: function buildConfig(config) {\n      var headers = config == null ? {} : config;\n\n      if (storage.get(Storage.TOKEN_KEY)) {\n        headers[\"si-ore-jwt\"] = storage.get(Storage.TOKEN_KEY);\n      }\n\n      return {\n        headers: headers\n      };\n    }\n  }]);\n\n  return HttpClient;\n}();\n\nvar http = new HttpClient();\nexport default http;",
    {
      "version": 3,
      "sources": [
        "/home/philippe/git/ui/src/http/http.js"
      ],
      "names": [
        "axios",
        "config",
        "storage",
        "Storage",
        "HttpClient",
        "get",
        "API_URL",
        "user",
        "formData",
        "FormData",
        "append",
        "login",
        "password",
        "fetch",
        "method",
        "body",
        "dataset",
        "applicationName",
        "credentials",
        "reference",
        "file",
        "id",
        "headers",
        "TOKEN_KEY",
        "http"
      ],
      "mappings": "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",
      "sourcesContent": [
        "import axios from \"axios\";\nimport config from \"@/config\";\nimport {\n    storage,\n    Storage\n} from \"@/storage\";\n\nclass HttpClient {\n    helloWorld() {\n        return axios.get(`${config.API_URL}`);\n    }\n\n    login(user) {\n        let formData = new FormData();\n        formData.append(\"login\", user.login);\n        formData.append(\"password\", user.password);\n        return fetch(\n            `${config.API_URL}login`, {\n                method: \"POST\",\n                body: formData,\n            }\n        )\n    }\n\n    logOut() {\n        return fetch(\n            `${config.API_URL}logout`, {\n                method: \"DELETE\",\n            }\n        )\n    }\n\n    loadDataset(dataset, applicationName) {\n        return fetch(`${config.API_URL}applications/${applicationName}/data/${dataset}`, {\n            credentials: \"same-origin\"\n        });\n    }\n\n    loadReference(reference, applicationName) {\n        return fetch(`${config.API_URL}applications/${applicationName}/references/${reference}`, {\n            credentials: \"same-origin\"\n        });\n    }\n\n    uploadReference(reference, applicationName, file) {\n        let formData = new FormData();\n        formData.append(\"file\", file);\n        return fetch(`${config.API_URL}applications/${applicationName}/references/${reference}`, {\n            method: \"POST\",\n            body: formData,\n            credentials: \"same-origin\"\n        });\n    }\n\n    uploadDataset(dataset, applicationName, file) {\n        let formData = new FormData();\n        formData.append(\"file\", file);\n        return fetch(`${config.API_URL}applications/${applicationName}/data/${dataset}`, {\n            method: \"POST\",\n            body: formData,\n            credentials: \"same-origin\"\n        });\n    }\n\n    loadApplications() {\n        return fetch(`${config.API_URL}applications/`, {\n            credentials: \"same-origin\"\n        });\n    }\n\n    loadApplicationConfiguration(applicationName) {\n        return fetch(`${config.API_URL}applications/${applicationName}`, {\n            credentials: \"same-origin\"\n        });\n    }\n\n    uploadFile(id) {\n        return fetch(`${config.API_URL}files/${id}`, {\n            credentials: \"same-origin\"\n        });\n    }\n\n    loadApplication(applicationName, file) {\n        let formData = new FormData();\n        formData.append(\"file\", file);\n        return fetch(`${config.API_URL}applications/${applicationName}`, {\n            method: \"POST\",\n            body: formData,\n            credentials: \"same-origin\"\n        });\n    }\n\n    buildConfig(config) {\n        const headers = config == null ? {} : config;\n        if (storage.get(Storage.TOKEN_KEY)) {\n            headers[\"si-ore-jwt\"] = storage.get(Storage.TOKEN_KEY);\n        }\n        return {\n            headers\n        };\n    }\n}\nconst http = new HttpClient()\nexport default http"
      ]
    }
  ]
}