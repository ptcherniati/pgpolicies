{"remainingRequest":"/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/node_modules/thread-loader/dist/cjs.js!/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/node_modules/babel-loader/lib/index.js!/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/node_modules/eslint-loader/index.js??ref--13-0!/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/src/http/http.js","dependencies":[{"path":"/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/src/http/http.js","mtime":1586419756437},{"path":"/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1585510160596},{"path":"/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/node_modules/thread-loader/dist/cjs.js","mtime":1585510160508},{"path":"/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/node_modules/eslint-loader/index.js","mtime":1585510160588}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9ob21lL3B0Y2hlcm5pYXRpL05ldEJlYW5zUHJvamVjdHMvc3ByaW5nLWJvb3QtanBhL3Z1ZWpzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9wdGNoZXJuaWF0aS9OZXRCZWFuc1Byb2plY3RzL3NwcmluZy1ib290LWpwYS92dWVqcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBjb25maWcgZnJvbSAiQC9jb25maWciOwppbXBvcnQgY3J5cHRvIGZyb20gIkAvY3J5cHRvIjsKaW1wb3J0IHsgc3RvcmFnZSwgU3RvcmFnZSB9IGZyb20gIkAvc3RvcmFnZSI7Cgp2YXIgSHR0cENsaWVudCA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEh0dHBDbGllbnQoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSHR0cENsaWVudCk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoSHR0cENsaWVudCwgW3sKICAgIGtleTogImhlbGxvV29ybGQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGhlbGxvV29ybGQoKSB7CiAgICAgIHJldHVybiBheGlvcy5nZXQoIiIuY29uY2F0KGNvbmZpZy5BUElfVVJMKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9naW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ2luKHVzZXIpIHsKICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZvcm1EYXRhLmFwcGVuZCgidXNlcm5hbWUiLCB1c2VyLnVzZXJuYW1lKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJwYXNzd29yZCIsIHVzZXIucGFzc3dvcmQpOwogICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGNvbmZpZy5BUElfVVJMLCAiTG9naW4iKSwgewogICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgIGJvZHk6IGZvcm1EYXRhCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImxvYWRVc2VycyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZFVzZXJzKCkgewogICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGNvbmZpZy5BUElfVVJMLCAiVXNlcnMiKSwgewogICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgbW9kZTogJ25vLWNvcnMnCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogInJvdXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByb3V0ZShjb2RlKSB7CiAgICAgIHZhciBjaGFsbGVuZ2UgPSBjcmVhdGVIbWFjKCdzaGEyNTYnKS51cGRhdGUoY29kZSkuZGlnZXN0KCdoZXgnKTsKICAgICAgdmFyIGpzb24gPSBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgImNsaWVudF9pZCI6IDIzNDUsCiAgICAgICAgLy8iY2xpZW50X3NlY3JldCI6ICJzdHJpbmciLAogICAgICAgICJjb2RlIjogY29kZSwKICAgICAgICAiY29kZV92ZXJpZmllciI6IGNoYWxsZW5nZSwKICAgICAgICAiZ3JhbnRfdHlwZSI6ICJDTElFTlRfQ1JFREVOVElBTFMiCiAgICAgIH0pOwogICAgICB2YXIgbXlIZWFkZXJzID0gbmV3IEhlYWRlcnMoKTsKICAgICAgbXlIZWFkZXJzLmFwcGVuZCgiQ29udGVudC1UeXBlIiwgImFwcGxpY2F0aW9uL2pzb24iKTsKICAgICAgbXlIZWFkZXJzLmFwcGVuZCgiQ29udGVudC1MZW5ndGgiLCBqc29uLmxlbmd0aC50b1N0cmluZygpKTsKICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChjb25maWcuQVBJX1VSTCwgIlJvbGVzIiksIHsKICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICBjcmVkZW50aWFsczogInNhbWUtb3JpZ2luIiwKICAgICAgICBoZWFkZXJzOiBteUhlYWRlcnMsCiAgICAgICAgYm9keToganNvbgogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJsb2dpbkNsaW1hdGlrVXNlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9naW5DbGltYXRpa1VzZXIoKSB7CiAgICAgIHZhciBteUhlYWRlcnMgPSBuZXcgSGVhZGVycygpOwogICAgICBteUhlYWRlcnMuYXBwZW5kKCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4iLCAiaHR0cHM6Ly84Mi4yMjkuMTA5LjI0MTo5MDkwIik7CiAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoY29uZmlnLkNMSU1BVElLKSwgewogICAgICAgIGhlYWRlcnM6IG15SGVhZGVycywKICAgICAgICAvL3JlZmVycmVyOiAiaHR0cHM6Ly84Mi4yMjkuMTA5LjI0MTo5MDkwIiwKICAgICAgICByZWZlcnJlclBvbGljeTogIm9yaWdpbiIKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9nT3V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2dPdXQoKSB7CiAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoY29uZmlnLkFQSV9VUkwsICJMb2dvdXQiKSwgewogICAgICAgIG1ldGhvZDogIkRFTEVURSIKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9hZEFsaW1lbnRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkQWxpbWVudHMoKSB7CiAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoY29uZmlnLkFQSV9VUkwsICJBbGltZW50cyIpLCB7CiAgICAgICAgY3JlZGVudGlhbHM6ICJzYW1lLW9yaWdpbiIKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9hZFJvbGVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkUm9sZXMoKSB7CiAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoY29uZmlnLkFQSV9VUkwsICJSb2xlcyIpLCB7CiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJ0ZXh0L3BsYWluIiwKICAgICAgICBjcmVkZW50aWFsczogInNhbWUtb3JpZ2luIgogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJhZGRSb2xlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkUm9sZXMocm9sZSkgewogICAgICB2YXIganNvbiA9IEpTT04uc3RyaW5naWZ5KHJvbGUpOwogICAgICB2YXIgbXlIZWFkZXJzID0gbmV3IEhlYWRlcnMoKTsKICAgICAgbXlIZWFkZXJzLmFwcGVuZCgiQ29udGVudC1UeXBlIiwgImFwcGxpY2F0aW9uL2pzb24iKTsKICAgICAgbXlIZWFkZXJzLmFwcGVuZCgiQ29udGVudC1MZW5ndGgiLCBqc29uLmxlbmd0aC50b1N0cmluZygpKTsKICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChjb25maWcuQVBJX1VSTCwgIlJvbGVzIiksIHsKICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICBjcmVkZW50aWFsczogInNhbWUtb3JpZ2luIiwKICAgICAgICBoZWFkZXJzOiBteUhlYWRlcnMsCiAgICAgICAgYm9keToganNvbgogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJsb2FkUG9saWNpZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWRQb2xpY2llcygpIHsKICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChjb25maWcuQVBJX1VSTCwgIlBvbGljaWVzIiksIHsKICAgICAgICBjcmVkZW50aWFsczogInNhbWUtb3JpZ2luIgogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJsb2FkRGF0YXNldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZERhdGFzZXQoZGF0YXNldCwgYXBwbGljYXRpb25OYW1lKSB7CiAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoY29uZmlnLkFQSV9VUkwsICJBLyIpLmNvbmNhdChhcHBsaWNhdGlvbk5hbWUsICIvZGF0YS8iKS5jb25jYXQoZGF0YXNldCksIHsKICAgICAgICBjcmVkZW50aWFsczogInNhbWUtb3JpZ2luIgogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBIdHRwQ2xpZW50Owp9KCk7Cgp2YXIgaHR0cCA9IG5ldyBIdHRwQ2xpZW50KCk7CmV4cG9ydCBkZWZhdWx0IGh0dHA7"},{"version":3,"sources":["/home/ptcherniati/NetBeansProjects/spring-boot-jpa/vuejs/src/http/http.js"],"names":["axios","config","crypto","storage","Storage","HttpClient","get","API_URL","user","formData","FormData","append","username","password","fetch","method","body","mode","code","challenge","createHmac","update","digest","json","JSON","stringify","myHeaders","Headers","length","toString","credentials","headers","CLIMATIK","referrerPolicy","role","dataset","applicationName","http"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport config from \"@/config\";\nimport crypto from \"@/crypto\"\nimport {\n    storage,\n    Storage\n} from \"@/storage\";\n\nclass HttpClient {\n    helloWorld() {\n        return axios.get(`${config.API_URL}`);\n    }\n\n    login(user) {\n        let formData = new FormData();\n        formData.append(\"username\", user.username);\n        formData.append(\"password\", user.password);\n        return fetch(\n            `${config.API_URL}Login`, {\n                method: \"POST\",\n                body: formData,\n            }\n        )\n    }\n\n    loadUsers() {\n        return fetch(\n            `${config.API_URL}Users`, {\n                method: \"GET\",\n                mode: 'no-cors',\n            }\n        )\n    }\n\n    route(code) {\n        var challenge = createHmac('sha256')\n            .update(code)\n            .digest('hex');\n        var json = JSON.stringify({\n            \"client_id\": 2345,\n            //\"client_secret\": \"string\",\n            \"code\": code,\n            \"code_verifier\": challenge,\n            \"grant_type\": \"CLIENT_CREDENTIALS\"\n        });\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\")\n        myHeaders.append(\"Content-Length\", json.length.toString());\n        return fetch(\n            `${config.API_URL}Roles`, {\n                method: \"POST\",\n                credentials: \"same-origin\",\n                headers: myHeaders,\n                body: json\n            }\n        );\n    }\n\n    loginClimatikUser() {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Access-Control-Allow-Origin\", \"https://82.229.109.241:9090\");\n        return fetch(\n            `${config.CLIMATIK}`, {\n                headers: myHeaders,\n                //referrer: \"https://82.229.109.241:9090\",\n                referrerPolicy: \"origin\",\n            }\n        )\n    }\n\n    logOut() {\n        return fetch(\n            `${config.API_URL}Logout`, {\n                method: \"DELETE\",\n            }\n        )\n    }\n\n    loadAliments() {\n        return fetch(`${config.API_URL}Aliments`, {\n            credentials: \"same-origin\"\n        });\n    }\n\n    loadRoles() {\n        return fetch(`${config.API_URL}Roles`, {\n            \"Content-Type\": \"text/plain\",\n            credentials: \"same-origin\"\n        });\n    }\n\n    addRoles(role) {\n        var json = JSON.stringify(role);\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\")\n        myHeaders.append(\"Content-Length\", json.length.toString());\n        return fetch(\n            `${config.API_URL}Roles`, {\n                method: \"POST\",\n                credentials: \"same-origin\",\n                headers: myHeaders,\n                body: json\n            }\n        );\n    }\n\n    loadPolicies() {\n        return fetch(`${config.API_URL}Policies`, {\n            credentials: \"same-origin\"\n        });\n    }\n\n    loadDataset(dataset, applicationName) {\n        return fetch(`${config.API_URL}A/${applicationName}/data/${dataset}`, {\n            credentials: \"same-origin\"\n        });\n    }\n}\nconst http = new HttpClient()\nexport default http"]}]}